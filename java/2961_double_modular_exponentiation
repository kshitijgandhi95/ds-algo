class Solution {
    public List<Integer> getGoodIndices(int[][] variables, int target) {
        List<Integer> retList = new ArrayList<>();
        
        for (int i=0; i< variables.length; i++) {
            int[] curr = variables[i];
            int first = power (curr[0], curr[1], 10);
            int second = power (first, curr[2], curr[3]);
            if (second == target) {
                retList.add (i);
            }
        }
        return retList;
    }
    
    private int power(int x, int y, int p)
    {
        int res = 1; // Initialize result
 
        x = x % p; // Update x if it is more than or
        // equal to p
 
        if (x == 0)
            return 0; // In case x is divisible by p;
 
        while (y > 0)
        {
 
        // If y is odd, multiply x with result
        if ((y & 1) != 0)
            res = (res * x) % p;
 
        // y must be even now
        y = y >> 1; // y = y/2
        x = (x * x) % p;
    }
    return res;
  }
}