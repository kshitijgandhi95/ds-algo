class Solution {
    public int numPairsDivisibleBy60(int[] time) {
        Map<Integer, Integer> mp = new HashMap<>();
        int count = 0;

        for (int i=0; i<time.length; i++) {
            int num = time[i]%60;
            int required = (60 - num)%60;
            if (mp.containsKey(num)) {
                count+= mp.get(num);
            }
            mp.put(required, mp.getOrDefault(required, 0)+1);
        }
        return count;
    }
}


//another solution (copied)
class Solution {
    public int numPairsDivisibleBy60(int[] arr) {
        int n = arr.length;

        long count[] = new long[60];

        for(int i=0; i<n; i++){
            count[arr[i]%60]++;
        }

        long ans = 0;

        for(int i=1; i<30; i++){
            ans = ans + count[i]*count[60-i];
        }

        ans = ans + (count[0]*(count[0]-1))/2 + (count[30]*(count[30]-1))/2;
        return (int)ans;
    }
}