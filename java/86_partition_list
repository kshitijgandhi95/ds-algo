/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode partition(ListNode head, int x) {
        ListNode less = new ListNode(Integer.MIN_VALUE);
        ListNode more = new ListNode(Integer.MIN_VALUE);;
        ListNode curr = head;
        ListNode currLess = less;
        ListNode currMore = more;

        while (curr != null) {
            if (curr.val < x) {
                    currLess.next = new ListNode(curr.val);
                    currLess = currLess.next;
            }
            else {
                
                    currMore.next = new ListNode(curr.val);
                    currMore = currMore.next;
            }
            curr = curr.next;
        }
        currLess.next = more.next;
        return less.next;
    }
}