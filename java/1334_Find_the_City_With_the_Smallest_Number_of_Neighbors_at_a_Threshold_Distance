class Solution {
    public int findTheCity(int n, int[][] edges, int thresh) {
        int[][] dist = new int[n][n];
        
        for (int[] arr: dist) {
            Arrays.fill (arr, Integer.MAX_VALUE);
        }

        for (int i=0; i<n; i++) {
            dist[i][i] = 0;
        }

        for (int i=0; i<edges.length; i++) {
            dist[edges[i][0]][edges[i][1]] = edges[i][2];
            dist[edges[i][1]][edges[i][0]] = edges[i][2];
        }

        for (int k=0; k<n; k++) {
            for (int i=0; i<n; i++) {
                for (int j=0; j<n; j++) {
                    if (dist[i][k] == Integer.MAX_VALUE || dist[k][j] == Integer.MAX_VALUE) {
                        continue;
                    }

                    dist[i][j] = Math.min (dist[i][j], dist[i][k] + dist[k][j]);
                }
            }
        }

        int minVal = Integer.MAX_VALUE;
        int retIndex = 0;

        for (int i=0; i<n; i++) {
            int count = 0;
            for (int j=0; j<n; j++) {
                if (dist[i][j] <= thresh) {
                    count++;
                }
            }
            if (count <= minVal) {
                minVal = count;
                retIndex = i;
            }
        }
        return retIndex;
    }
}