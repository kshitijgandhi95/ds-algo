/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>> levelOrd = new ArrayList<>();
        if (root == null) {
            return levelOrd;
        }
        Queue<Pair<TreeNode, Integer>> queue = new LinkedList<>();
        queue.add (new Pair(root, 0));
        while (!queue.isEmpty()) {
            Pair<TreeNode, Integer> p = queue.peek();
            queue.remove();
            int level = p.getValue();
            TreeNode r = p.getKey();
            if (levelOrd.size() < level+1) {
                List<Integer> arr = new ArrayList<> ();
                levelOrd.add(arr);
            }
            levelOrd.get(levelOrd.size()-1).add(r.val);
            if (r.left != null) {
                queue.add (new Pair(r.left, level+1));
            }
            if (r.right != null) {
                queue.add (new Pair(r.right, level+1));
            }
        }
        return levelOrd;
    }
}