//lintcode
/**
 * Definition of Interval:
 * public class Interval {
 *     int start, end;
 *     Interval(int start, int end) {
 *         this.start = start;
 *         this.end = end;
 *     }
 * }
 */

public class Solution {
    /**
     * @param intervals: an array of meeting time intervals
     * @return: if a person could attend all meetings
     */
    public boolean canAttendMeetings(List<Interval> intervals) {
        if (intervals.size() == 0 || intervals.size() == 1) {
            return true;
        }
        Collections.sort(intervals, new Comparator<Interval>(){
            public int compare (Interval i1, Interval i2) {
                if (i1.start != i2.start) {
                    return i1.start - i2.start;
                }
                return i1.end - i2.end;
            }
        });
        
        int curr = intervals.get(0).end;

        for (int i=1; i<intervals.size(); i++) {
            if (intervals.get(i).start < curr) {
                return false;
            }
            curr = Math.max (curr, intervals.get(i).end);
        }
        return true;
    }

}