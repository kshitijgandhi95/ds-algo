/* The isBadVersion API is defined in the parent class VersionControl.
      boolean isBadVersion(int version); */

public class Solution extends VersionControl {
    public int firstBadVersion(int n) {
        int start = 1;
        HashMap<Integer, Boolean> hm = new HashMap<Integer, Boolean> ();
        while (start < n) {
            int mid =  start + (n - start)/2;
            boolean isBad;
            if (hm.containsKey(mid)) {
                isBad = hm.get(mid);
            }
            else {
                isBad = isBadVersion (mid);;
            }
            if (!isBad) {
                start = mid + 1;
            }
            else {
                boolean left;
                if (hm.containsKey(mid-1)) {
                    left = hm.get(mid-1);
                }
                else {
                    left = isBadVersion (mid-1);
                }
                if (mid -1 > 0 &&  !left) {
                    return mid;
                }
                else if (mid - 1 == 0) {
                    return mid;
                }
                else {
                    n = mid - 1;
                }
            }
        }
        return n;
    }
}