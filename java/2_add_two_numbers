/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode l = new ListNode();
        ListNode ret = l;
        ArrayList<Integer> vec = new ArrayList<Integer>();
        int carr  = 0;
        while (l1 != null || l2 != null) {
            int sum = 0;
            if (l1 != null && l2 != null) {
                sum = l1.val + l2.val;
                l1 = l1.next;
                l2 = l2.next;
            }
            else if (l1 != null) {
                sum = l1.val;
                l1 = l1.next;
                
            }
            else {
                sum = l2.val;
                l2 = l2.next;
            }
            sum = sum + carr;
            vec.add (sum%10);
            carr = sum/10; 
        }
        for (int i=0; i<vec.size()-1; i++) {
            l.val = vec.get(i);
            ListNode n = new ListNode();
            l.next = n;
            l = l.next;
        }
        l.val = vec.get(vec.size()-1);
        if (carr !=0) {
            ListNode n = new ListNode();
            l.next = n;
            l = l.next;
            l.val = carr;
        }
        return ret;
    }
}