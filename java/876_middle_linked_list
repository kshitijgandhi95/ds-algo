/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode middleNode(ListNode head) {
        if (head == null) {
            return head;
        }
        if (head.next == null) {
            return head;
        }
        ArrayList<ListNode> arr = new ArrayList<ListNode>();
        int mid = middle (head, 0, arr);
        if (mid == 1) {
            return head.next;
        }
        if (arr.size() == 0) {
            return null;
        }
        return arr.get(0);
    }

    public int middle (ListNode head, int total, ArrayList<ListNode> arr) {
        if (head.next == null) {
            return (total+1)/2;
        }
        int val = middle (head.next, total+1, arr);
        if (val == total) {
            
            arr.add (head);
        }
        return val;
    }
}

//Copied solution
class Solution {
    public ListNode middleNode(ListNode head)
     {
         ListNode f = head;
         ListNode s = head;
          while( f != null && f.next != null)
          {
              f = f.next.next;
              s = s.next;
          }
          return s;
 }
}