/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* l = new ListNode();
        ListNode* ret = l;
        vector<int> vec;
        int carr = 0;
        while (l1 || l2) {
            int sum = 0;
            if (!l1) {
                sum = l2->val;
                l2 = l2->next;
            }
            else if (!l2){
                sum = l1->val;
                l1 = l1->next;
            }
            else {
                sum = l1->val + l2->val;
                l1 = l1->next;
                l2 = l2->next;
            } 
            sum = sum+carr;
            vec.push_back (sum%10);
            carr = sum/10; 
        }
        for (int i=0; i<vec.size()-1; i++) {
            l->val = vec[i];
            ListNode* n = new ListNode();
            l->next = n;
            l = l->next;
        }
        l->val = vec[vec.size()-1];
        if (carr !=0) {
            ListNode* n = new ListNode();
            l->next = n;
            l = l->next;
            l->val = carr;
        }
        return ret;
    }
};